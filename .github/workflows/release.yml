name: Upload Python Package

on:
  push:
    tags:
      - "*.*.*" # Will trigger for every tag, alternative: 'v*'

jobs:
  wait-for-tests:
    name: Wait for required checks
    runs-on: ubuntu-latest
    permissions:
      actions: read
      checks: read
      contents: read
    # Only wait for tests if this is NOT a release candidate tag
    if: ${{ !contains(github.ref_name, 'rc') }}
    steps:
      - name: Wait for status checks
        uses: lewagon/wait-on-check-action@v1.3.4
        with:
          ref: ${{ github.ref }}
          check-regexp: '^ubuntu-latest - Python \d+\.\d+\.x$'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10

  pypi-publish:
    name: Upload release to PyPI
    runs-on: ubuntu-latest
    # Wait for tests only if the wait-for-tests job actually ran
    needs: wait-for-tests
    if: ${{ always() && (needs.wait-for-tests.result == 'success' || needs.wait-for-tests.result == 'skipped') }}
    environment:
      name: pypi
      url: https://pypi.org/p/rbx.cp
    permissions:
      id-token: write # IMPORTANT: this permission is mandatory for trusted publishing
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10.x"
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Install dependencies
        run: |
          poetry --version
          poetry install --no-interaction
      - name: Build
        run: |
          poetry build
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: true
