{
    "$defs": {
        "ContestProblem": {
            "properties": {
                "short_name": {
                    "description": "\nShort name of the problem. Usually, just an uppercase letter,\nbut can be a sequence of uppercase letters followed by a number.",
                    "maxLength": 4,
                    "minLength": 1,
                    "pattern": "^[A-Z]+[0-9]*$",
                    "title": "Short Name",
                    "type": "string"
                },
                "path": {
                    "anyOf": [
                        {
                            "format": "path",
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "description": "\nPath to the problem relative to the contest package directory.\nIf not specified, will expect the problem to be in ./{short_name}/ folder.",
                    "title": "Path"
                },
                "color": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "description": "\nColor that represents this problem in the contest.\n\nCan be a hex color (#abcdef or #abc format), or a color name among available X11 colors.\n\nSee https://en.wikipedia.org/wiki/X11_color_names for the list of supported color names.\n",
                    "title": "Color"
                },
                "colorName": {
                    "anyOf": [
                        {
                            "pattern": "^[a-zA-Z]+$",
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "description": "\nA custom color name for the color provided by this problem.\n\nIf not provided, will try to infer a color name from the color provided.\n",
                    "title": "Colorname"
                }
            },
            "required": [
                "short_name"
            ],
            "title": "ContestProblem",
            "type": "object"
        },
        "ContestStatement": {
            "additionalProperties": false,
            "properties": {
                "name": {
                    "description": "Name of this statement.",
                    "maxLength": 128,
                    "minLength": 3,
                    "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]*$",
                    "title": "Name",
                    "type": "string"
                },
                "extends": {
                    "anyOf": [
                        {
                            "maxLength": 128,
                            "minLength": 3,
                            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]*$",
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "description": "Name of the statement to inherit from.",
                    "title": "Extends"
                },
                "language": {
                    "default": "en",
                    "description": "Language code for this statement (ISO 639-1).",
                    "title": "Language",
                    "type": "string"
                },
                "title": {
                    "default": "",
                    "description": "Title of the contest in this language.",
                    "title": "Title",
                    "type": "string"
                },
                "location": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "description": "Location of the contest in this language.",
                    "title": "Location"
                },
                "date": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "description": "Date of the contest in this language.",
                    "title": "Date"
                },
                "path": {
                    "description": "Path to the input statement file.",
                    "format": "path",
                    "title": "Path",
                    "type": "string"
                },
                "type": {
                    "$ref": "#/$defs/StatementType",
                    "default": "rbxTeX",
                    "description": "Type of the input statement file."
                },
                "joiner": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/JoinTexToPDF"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "description": "\nJoiner to be used to build the statement.\n                           \nThis determines how problem statements will be joined into a single contest statement."
                },
                "steps": {
                    "default": [],
                    "description": "\nDescribes a sequence of conversion steps that should be applied to the statement file\nof this contest.\n\nUsually, it is not necessary to specify these, as they can be inferred from the\ninput statement type and the output statement type, but you can use this to force\ncertain conversion steps to happen.\n",
                    "items": {
                        "discriminator": {
                            "mapping": {
                                "jinja-tex": "#/$defs/JinjaTeX",
                                "rbx-md-tex": "#/$defs/rbxMarkdownToTeX",
                                "rbx-tex": "#/$defs/rbxToTeX",
                                "tex2pdf": "#/$defs/TexToPDF"
                            },
                            "propertyName": "type"
                        },
                        "oneOf": [
                            {
                                "$ref": "#/$defs/TexToPDF"
                            },
                            {
                                "$ref": "#/$defs/JinjaTeX"
                            },
                            {
                                "$ref": "#/$defs/rbxToTeX"
                            },
                            {
                                "$ref": "#/$defs/rbxMarkdownToTeX"
                            }
                        ]
                    },
                    "title": "Steps",
                    "type": "array"
                },
                "configure": {
                    "default": [],
                    "description": "\nConfigure how certain conversion steps should happen when applied to the statement file of\nthis contest.\n\nDifferent from the `steps` field, this does not force the steps to happen, but rather only\nconfigure them in case they are applied.\n",
                    "items": {
                        "discriminator": {
                            "mapping": {
                                "jinja-tex": "#/$defs/JinjaTeX",
                                "rbx-md-tex": "#/$defs/rbxMarkdownToTeX",
                                "rbx-tex": "#/$defs/rbxToTeX",
                                "tex2pdf": "#/$defs/TexToPDF"
                            },
                            "propertyName": "type"
                        },
                        "oneOf": [
                            {
                                "$ref": "#/$defs/TexToPDF"
                            },
                            {
                                "$ref": "#/$defs/JinjaTeX"
                            },
                            {
                                "$ref": "#/$defs/rbxToTeX"
                            },
                            {
                                "$ref": "#/$defs/rbxMarkdownToTeX"
                            }
                        ]
                    },
                    "title": "Configure",
                    "type": "array"
                },
                "assets": {
                    "default": [],
                    "description": "\nAssets relative to the contest directory that should be included while building\nthe statement. Files will be included in the same folder as the statement file.\nCan be glob pattern as well, such as `imgs/*.png`.\n",
                    "items": {
                        "type": "string"
                    },
                    "title": "Assets",
                    "type": "array"
                },
                "override": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/ProblemStatementOverride"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "description": "Override configuration for problem statements."
                },
                "match": {
                    "anyOf": [
                        {
                            "maxLength": 128,
                            "minLength": 3,
                            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]*$",
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "description": "\n        Name of the problem-level statement to match this statement against.\n\n        If not specified, will match against the first statement of the same language.\n        ",
                    "title": "Match"
                },
                "vars": {
                    "$ref": "#/$defs/RecVars",
                    "default": {},
                    "description": "Variables to be re-used across the package."
                }
            },
            "required": [
                "name"
            ],
            "title": "ContestStatement",
            "type": "object"
        },
        "JinjaTeX": {
            "properties": {
                "type": {
                    "const": "jinja-tex",
                    "title": "Type",
                    "type": "string"
                }
            },
            "required": [
                "type"
            ],
            "title": "JinjaTeX",
            "type": "object"
        },
        "JoinTexToPDF": {
            "description": "Configures the joining of contest and problem texes to PDF.",
            "properties": {
                "type": {
                    "const": "tex2pdf",
                    "title": "Type",
                    "type": "string"
                }
            },
            "required": [
                "type"
            ],
            "title": "JoinTexToPDF",
            "type": "object"
        },
        "ProblemStatementOverride": {
            "additionalProperties": false,
            "properties": {
                "configure": {
                    "default": [],
                    "description": "\nConfigure how certain conversion steps should happen when applied to the statement file.\n\nDifferent from the `steps` field, this does not force the steps to happen, but rather only\nconfigure them in case they are applied.\n",
                    "items": {
                        "discriminator": {
                            "mapping": {
                                "jinja-tex": "#/$defs/JinjaTeX",
                                "rbx-md-tex": "#/$defs/rbxMarkdownToTeX",
                                "rbx-tex": "#/$defs/rbxToTeX",
                                "tex2pdf": "#/$defs/TexToPDF"
                            },
                            "propertyName": "type"
                        },
                        "oneOf": [
                            {
                                "$ref": "#/$defs/TexToPDF"
                            },
                            {
                                "$ref": "#/$defs/JinjaTeX"
                            },
                            {
                                "$ref": "#/$defs/rbxToTeX"
                            },
                            {
                                "$ref": "#/$defs/rbxMarkdownToTeX"
                            }
                        ]
                    },
                    "title": "Configure",
                    "type": "array"
                },
                "vars": {
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "number"
                            },
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "default": {},
                    "description": "Variables to be merged into the problem statement vars.",
                    "title": "Vars",
                    "type": "object"
                }
            },
            "title": "ProblemStatementOverride",
            "type": "object"
        },
        "RecVars": {
            "additionalProperties": {
                "anyOf": [
                    {
                        "type": "integer"
                    },
                    {
                        "type": "number"
                    },
                    {
                        "type": "boolean"
                    },
                    {
                        "type": "string"
                    },
                    {
                        "$ref": "#/$defs/RecVars"
                    }
                ]
            },
            "type": "object"
        },
        "StatementType": {
            "enum": [
                "rbxTeX",
                "rbxMarkdown",
                "TeX",
                "JinjaTeX",
                "PDF"
            ],
            "title": "StatementType",
            "type": "string"
        },
        "TexToPDF": {
            "description": "Configures the conversion between LaTeX and PDF using pdfLaTeX.",
            "properties": {
                "type": {
                    "const": "tex2pdf",
                    "title": "Type",
                    "type": "string"
                }
            },
            "required": [
                "type"
            ],
            "title": "TexToPDF",
            "type": "object"
        },
        "rbxMarkdownToTeX": {
            "description": "Configures the conversion between rbxMarkdown and LaTeX.",
            "properties": {
                "type": {
                    "const": "rbx-md-tex",
                    "title": "Type",
                    "type": "string"
                }
            },
            "required": [
                "type"
            ],
            "title": "rbxMarkdownToTeX",
            "type": "object"
        },
        "rbxToTeX": {
            "description": "Configures the conversion between rbxTeX and LaTeX.",
            "properties": {
                "type": {
                    "const": "rbx-tex",
                    "title": "Type",
                    "type": "string"
                },
                "template": {
                    "default": "template.rbx.tex",
                    "description": "Path to the template that should be used to render the rbx-tex blocks.",
                    "format": "path",
                    "title": "Template",
                    "type": "string"
                }
            },
            "required": [
                "type"
            ],
            "title": "rbxToTeX",
            "type": "object"
        }
    },
    "additionalProperties": false,
    "properties": {
        "name": {
            "description": "Name of this contest.",
            "maxLength": 32,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]*$",
            "title": "Name",
            "type": "string"
        },
        "problems": {
            "default": [],
            "description": "List of problems in this contest.",
            "items": {
                "$ref": "#/$defs/ContestProblem"
            },
            "title": "Problems",
            "type": "array"
        },
        "statements": {
            "default": null,
            "description": "Configure statements in this contest, per language.",
            "items": {
                "$ref": "#/$defs/ContestStatement"
            },
            "title": "Statements",
            "type": "array"
        },
        "vars": {
            "$ref": "#/$defs/RecVars",
            "default": {},
            "description": "Variables to be re-used across the package."
        }
    },
    "required": [
        "name"
    ],
    "title": "Contest",
    "type": "object"
}